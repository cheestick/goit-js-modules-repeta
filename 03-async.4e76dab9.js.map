{"version":3,"sources":["js/03-async.js"],"names":["getFruit","name","fruits","strawberry","kiwi","apple","Promise","resolve","reject","setTimeout","aMakeSmoothie","console","time","berry","all","log","timeEnd","error","makeSmoothie","then"],"mappings":";AAAA,SAASA,EAASC,GACVC,MAAAA,EAAS,CACbC,WAAY,KACZC,KAAM,MACNC,MAAO,MAGF,OAAA,IAAIC,QAAQ,CAACC,EAASC,IAAWC,WAAW,IAAMF,EAAQL,EAAOD,IAAQ,MAGlF,eAAeS,IACT,IACFC,QAAQC,KAAK,iBACPP,MAAAA,EAAQL,EAAS,SACjBI,EAAOJ,EAAS,QAChBa,EAAQb,EAAS,cAEjBE,QAAeI,QAAQQ,IAAI,CAACT,EAAOD,EAAMS,IAKxCX,OAJPS,QAAQI,IAAIb,GAEZS,QAAQK,QAAQ,iBAETd,EACP,MAAOe,GACPN,QAAQI,IAAI,SAAWE,IAQ3B,SAASC,IACPlB,EAAS,SAASmB,KAAKd,IACrBM,QAAQI,IAAIV,GACZL,EAAS,QAAQmB,KAAKR,QAAQI,OAPlCL,IAAgBS,KAAKR,QAAQI,KAE7BJ,QAAQI,IAAI","file":"03-async.4e76dab9.js","sourceRoot":"../src","sourcesContent":["function getFruit(name) {\n  const fruits = {\n    strawberry: '🍓',\n    kiwi: '🥝 ',\n    apple: '🍎',\n  };\n\n  return new Promise((resolve, reject) => setTimeout(() => resolve(fruits[name]), 500));\n}\n\nasync function aMakeSmoothie() {\n  try {\n    console.time('aMakeSmoothie');\n    const apple = getFruit('apple');\n    const kiwi = getFruit('kiwi');\n    const berry = getFruit('strawberry');\n\n    const fruits = await Promise.all([apple, kiwi, berry]);\n    console.log(fruits);\n\n    console.timeEnd('aMakeSmoothie');\n\n    return fruits;\n  } catch (error) {\n    console.log('ERROR ' + error);\n  }\n}\n\naMakeSmoothie().then(console.log);\n\nconsole.log('sync code');\n\nfunction makeSmoothie() {\n  getFruit('apple').then(apple => {\n    console.log(apple);\n    getFruit('kiwi').then(console.log);\n  });\n}\n\n// //ASYNC sintax variations:\n\n// async function fn() {}\n\n// const fn = async function () {};\n\n// const arr = async () => {};\n\n// const x = {\n//   async getName() {},\n// };\n\n// class X {\n//   async getName() {}\n// }\n"]}