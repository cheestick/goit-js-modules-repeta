{"version":3,"sources":["js/tabs-plugin.js"],"names":["Tabs","constructor","rootSelector","activeControlClass","activePaneClass","activeTab","_refs","_getRefs","_activeControlClass","_activePaneClass","_activeTabIdx","_bindEvents","_setActiveTab","root","refs","controls","document","querySelector","panes","controlItems","control","querySelectorAll","classList","add","paneId","_getPaneId","_setActivePane","_removeActiveTab","currentActiveControlItem","remove","_removeActivePane","_getPaneById","addEventListener","_onControlsClick","bind","event","preventDefault","target","nodeName","console","log","controlItem","getAttribute","slice","id","options","tabs1","options1","tabs2"],"mappings":";AAAA,MAAMA,EACJC,aAAY,aACVC,EADU,mBAEVC,EAAqB,SAFX,gBAGVC,EAAkB,SAHR,UAIVC,EAAY,IAEPC,KAAAA,MAAQ,KAAKC,SAASL,GACtBM,KAAAA,oBAAsBL,EACtBM,KAAAA,iBAAmBL,EACnBM,KAAAA,cAAgBL,EAAY,EAE5BM,KAAAA,cACAC,KAAAA,gBAGPL,SAASM,GACDC,MAAAA,EAAO,GAINA,OAHPA,EAAKC,SAAWC,SAASC,iBAAiBJ,qBAC1CC,EAAKI,MAAQF,SAASC,iBAAiBJ,kBAEhCC,EAGTF,gBACQO,MACAC,EADe,KAAKd,MAAMS,SAASM,iBAAiB,KAC7B,KAAKX,eAClCU,EAAQE,UAAUC,IAAI,KAAKf,qBAErBgB,MAAAA,EAAS,KAAKC,WAAWL,GAC1BM,KAAAA,eAAeF,GAGtBG,mBACQC,MAAAA,EAA2B,KAAKtB,MAAMS,SAASE,kBAC/C,KAAKT,uBAGP,IAACoB,EACH,OAGFA,EAAyBN,UAAUO,OAAO,KAAKrB,qBACzCgB,MAAAA,EAAS,KAAKC,WAAWG,GAC1BE,KAAAA,kBAAkBN,GAGzBE,eAAeF,GACA,KAAKO,aAAaP,GAC1BF,UAAUC,IAAI,KAAKd,kBAG1BqB,kBAAkBN,GACH,KAAKO,aAAaP,GAC1BF,UAAUO,OAAO,gBAGxBlB,cACOL,KAAAA,MAAMS,SAASiB,iBAAiB,QAAS,KAAKC,iBAAiBC,KAAK,OAG3ED,iBAAiBE,GAEXA,GADJA,EAAMC,iBACwB,MAA1BD,EAAME,OAAOC,SAEf,YADAC,QAAQC,IAAI,2BAITb,KAAAA,mBAECc,MAAAA,EAAcN,EAAME,OAC1BI,EAAYnB,UAAUC,IAAI,KAAKf,qBAEzBgB,MAAAA,EAAS,KAAKC,WAAWgB,GAC1Bf,KAAAA,eAAeF,GAGtBC,WAAWL,GACFA,OAAAA,EAAQsB,aAAa,QAAQC,MAAM,GAG5CZ,aAAaa,GACJ,OAAA,KAAKtC,MAAMY,MAAMD,kBAAkB2B,MAI9C,MAAMC,EAAU,CACd3C,aAAc,UACdC,mBAAoB,yBACpBC,gBAAiB,gBAGb0C,EAAQ,IAAI9C,EAAK6C,GAEjBE,EAAW,CACf7C,aAAc,UACdC,mBAAoB,yBACpBC,gBAAiB,eACjBC,UAAW,GAGP2C,EAAQ,IAAIhD,EAAK+C,GAEvBR,QAAQC,IAAIM,GACZP,QAAQC,IAAIQ","file":"tabs-plugin.7c44d717.js","sourceRoot":"../src","sourcesContent":["class Tabs {\n  constructor({\n    rootSelector,\n    activeControlClass = 'active',\n    activePaneClass = 'active',\n    activeTab = 1,\n  }) {\n    this._refs = this._getRefs(rootSelector);\n    this._activeControlClass = activeControlClass;\n    this._activePaneClass = activePaneClass;\n    this._activeTabIdx = activeTab - 1;\n\n    this._bindEvents();\n    this._setActiveTab();\n  }\n\n  _getRefs(root) {\n    const refs = {};\n    refs.controls = document.querySelector(`${root} [data-controls]`);\n    refs.panes = document.querySelector(`${root} [data-panes]`);\n\n    return refs;\n  }\n\n  _setActiveTab() {\n    const controlItems = this._refs.controls.querySelectorAll('a');\n    const control = controlItems[this._activeTabIdx];\n    control.classList.add(this._activeControlClass);\n\n    const paneId = this._getPaneId(control);\n    this._setActivePane(paneId);\n  }\n\n  _removeActiveTab() {\n    const currentActiveControlItem = this._refs.controls.querySelector(\n      `.${this._activeControlClass}`,\n    );\n\n    if (!currentActiveControlItem) {\n      return;\n    }\n\n    currentActiveControlItem.classList.remove(this._activeControlClass);\n    const paneId = this._getPaneId(currentActiveControlItem);\n    this._removeActivePane(paneId);\n  }\n\n  _setActivePane(paneId) {\n    const pane = this._getPaneById(paneId);\n    pane.classList.add(this._activePaneClass);\n  }\n\n  _removeActivePane(paneId) {\n    const pane = this._getPaneById(paneId);\n    pane.classList.remove('pane--active');\n  }\n\n  _bindEvents() {\n    this._refs.controls.addEventListener('click', this._onControlsClick.bind(this));\n  }\n\n  _onControlsClick(event) {\n    event.preventDefault();\n    if (event.target.nodeName !== 'A') {\n      console.log('This is not a reference');\n      return;\n    }\n\n    this._removeActiveTab();\n\n    const controlItem = event.target;\n    controlItem.classList.add(this._activeControlClass);\n\n    const paneId = this._getPaneId(controlItem);\n    this._setActivePane(paneId);\n  }\n\n  _getPaneId(control) {\n    return control.getAttribute('href').slice(1);\n  }\n\n  _getPaneById(id) {\n    return this._refs.panes.querySelector(`#${id}`);\n  }\n}\n\nconst options = {\n  rootSelector: '#tabs-1',\n  activeControlClass: 'controls__item--active',\n  activePaneClass: 'pane--active',\n};\n\nconst tabs1 = new Tabs(options);\n\nconst options1 = {\n  rootSelector: '#tabs-2',\n  activeControlClass: 'controls__item--active',\n  activePaneClass: 'pane--active',\n  activeTab: 2,\n};\n\nconst tabs2 = new Tabs(options1);\n\nconsole.log(tabs1);\nconsole.log(tabs2);\n"]}